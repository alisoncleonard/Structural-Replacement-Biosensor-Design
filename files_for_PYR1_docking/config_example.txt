[DEFAULT]

### REQUIRED ###

# Your path to your local installation of Rosetta, e.g. /mnt/c/users/jorda/desktop/software/rosetta
PathToRosetta = /users/alisonleonard/rosetta

# Your path to your local installation of PyRosetta, e.g. /mnt/c/users/jorda/desktop/software/pyrosetta
PathToPyrosetta = /users/alisonleonard/pyrosetta

# Your unmodified pdb file e.g. my_enzyme.pdb
PrePDBFileName = ../../structures/3QN1_H2O.pdb

# Your pdb file after it has been modified by a mutation, deletion whatever it may be 
# that is going to be replaced by a ligand e.g. my_enzyme_W100G.pdb
PostPDBFileName = ../../structures/3QN1_nolig_H2O.pdb

# The residue number of the structural feature you wish to map onto, this can be a 
# ligand (if so the number would likely be 1) or a residue e.g. 12
ResidueNumber = 1

# The chain the previous residue number is on, e.g. A
ChainLetter = X


### OPTIONAL ###

# Where to store the generated params and pdb files, make sure this
# folder exists before you run the scripts
PathToConformers = conformers

# What to name the table that is generated
CSVFileName = Ligands.csv

# What to name the pandas DataFrame that is generated
PKLFileName = Ligands.pkl

# If your protein has a ligand and requires .params files, input a space separated list of them here
ParamsList = ../../params/A8T.params

# If you have multiple "residues" in your ligand, which one are we mapping onto (rare)
LigandResidueNumber = 1

# Whether to generate atom labels or fill them in yourself (False is reccommended)
AutoGenerateAlignment = False



[create_table]

### REQUIRED ###

# Input molecule SDF files separated by spaces, e.g. 'TRP.sdf WIN.sdf ABA.sdf' or alternatively 
# if they follow a convention ' conf1.sdf conf2.sdf ' then a wild-card (*) can be used 'conf*'
MoleculeSDFs =  ../nitazene_low-energy.sdf ../nitazene_low-energy.sdf


### OPTIONAL ###

# Set to True if your SDF files have a comment on the third line with a CAS ID, scifinder does this
# This will be False if using SM_ConfGen as recommended. 
UseMoleculeID = False

# Set to True if your molecules have no name on the sdf file, uses a simple count instead
# This will be True if using SM_ConfGen as recommended. 
NoName = True


[grade_conformers]

### OPTIONAL ###

# Width of the grid for performing backbone collision checking (default = 1.0)
BinWidth = 1.0

# By what factor to multiply pauling vdw radii by in the grid calculation (default = 0.7)
VDW_Modifier = 0.70

# Whether to check collision against just backbone or include side chain atoms. 
# Select True for both Docked to Sequence and Glycine Shaved Docking 
IncludeSC = True

# The next sections are used when sampling perturbations of your ligand alignment

# Rosetta pose jump between the protein and ligand for ligand perturbation (Default = 2, check your Rosetta FoldTree if uncertain) 
JumpNum = 2

# Mean rotation angle in degrees for ligand perturbation (Default = 25) 
Rotation = 25

# Mean translation in angstroms for ligand perturbation (Default = 0.5) 
Translation = 0.5

# This section is used if you need to verify a possible H-bond with a water molecule as part of the binding mode. 
# This can be left blank if you don't have a water molecule involved. 

# Upper distance bound in angstroms to search for water molecule (Default = 3.5)
UpperWaterDistance = 3.5

# Lower distance bound in angstroms to search for water molecule (Default = 2.5)
LowerWaterDistance = 2.5

# Backbone clash key residues keep sidechain (Note AA position after gaps are removed from structure)
# Input as position number with space in between (leave blank if there are no known residues that must be preserved for the binding mechanism)
BackboneClashKeepSidechains = 86 113 114

# REU alignment passing score cutoff (Default = -300)
MaxScore = -300


### DOCKED TO SEQUENCE ###

# note that the AA positions to mutate will be offset by the number of gaps in your input structure because Rosetta will remove gaps and renumber positions when reading in the pdf file. Double check your output post_mutate.pdb file to ensure your sequence to dock to is correct. 
# Input as position number or value with space in between. Leave blank if you are not running this method. 

# Example 
# nitazene general sensor from screen of L06_N library plus 159H 120G 83L
# K59Q V83L N90S S92M F108V Y120G S122G F159H A160V
MutatePositions = 59 81 88 90 106 118 120 157 158
MutateAA = Q L S M V G G H V


### GLYCINE SHAVED DOCKING ###

# note that the AA positions to glycine shave will be offset by the number of gaps in your input structure because Rosetta will remove gaps and renumber positions when reading in the pdf file. Double check your output post_mutate.pdb file to ensure your sequence to dock to is correct. 
# Input as position number with space in between. Leave blank if you are not running this method.

GlycineShavePositions = 60 61 62 89 81 85 87 88 90 106 107 108 115 118 120 139 157 158 161 162 165


[rosetta_design]

# Rosetta design from an output PDB file with a passing score

## REQUIRED ###

# The protein you wish to design against, note this should be pre-relaxed with Rosetta
# Should usually be the same as PostPDBFileName
DesignPDBFile = ../../structures/3QN1_nolig_H2O_relaxed.pdb

# PDB file numbers of passing alignments to design on. Input as position number with space in between 
PassingPDBs = 0 5

# A resfile defining the mutations and residue changes allowed
Resfile = ../../resfiles/designable_PYR1_NATRO_4.resfile


### OPTIONAL ###

# Where to place the outputted designs and design scorefile
PathToComplexes = rosetta_designs

# How much of a score bonus to give vdM mutations as well as natural sequence positions (Default = 1)
FNRBonus = 1

